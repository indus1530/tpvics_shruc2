plugins {
    id 'com.android.application'
}
apply plugin: 'kotlin-android'

android {
    buildFeatures {
        dataBinding true
        viewBinding true

    }
    Properties versionProps = new Properties()
    def versionPropsFile = file('version.properties')

    //Create a version properties file and add required properties with default values
    if (!versionPropsFile.exists()) {
        versionProps['VERSION_PATCH'] = "0"
        versionProps['VERSION_BUILD'] = "0"
        versionProps['VERSION_NUMBER'] = "0"

        Writer writer = new FileWriter(versionPropsFile, false)
        versionProps.store(versionPropsFile.newWriter(), null)
    }

    // Read existing
    if (versionPropsFile.canRead()) {
        versionProps = new Properties()

        versionProps.load(new FileInputStream(versionPropsFile))

        def value = 0
        def versionType = "D"


        def runTasks = gradle.startParameter.taskNames
        if ('assemble' in runTasks || ':app:assembleRelease' in runTasks || 'aR' in runTasks) {
            value = 1
            versionType = "R"
        }

        def versionNumber = 2
        //  def versionMinor = 0
        def versionPatch = versionProps['VERSION_PATCH'].toInteger() + value
        def versionBuild = versionProps['VERSION_BUILD'].toInteger() + 1
        //def versionNumber = versionProps['VERSION_NUMBER'].toInteger() + value

        versionProps['VERSION_PATCH'] = versionPatch.toString()
        versionProps['VERSION_BUILD'] = versionBuild.toString()
        versionProps['VERSION_NUMBER'] = versionNumber.toString()

        versionProps.store(versionPropsFile.newWriter(), null)

        defaultConfig {
            applicationId "edu.aku.hassannaqvi.tpvics_r2"
            versionCode versionBuild
            versionName "${versionNumber}.${versionPatch}${versionType}"
            minSdk 22
            targetSdk 30
            compileSdkVersion 31
        }

        applicationVariants.all { variant ->
            variant.outputs.each { output ->

                def appName = rootProject.name
                def date = new Date()
                def formattedDate = date.format('yyyy_MM_dd')

                def outputDir = new File("${project.buildDir.absolutePath}/outputs/apk/${variant.flavorName}/${variant.buildType.name}")
                //def outputFileName = "app-${variant.flavorName}-${variant.buildType.name}.apk"
                def outputFileName = "${appName}_${formattedDate}_${versionType}v${versionBuild}.apk"
                // def outputFile = new File("$outputDir/$outputFileName")
                variant.packageApplicationProvider.get().outputDirectory = new File("$outputDir")
                output.outputFileName = outputFileName
                /*  if (outputFileName != null && outputFileName.endsWith('.apk')) {
                      //output.outputFileName = outputFileName
                      output.outputFileName = new File("${project.buildDir.absolutePath}/outputs/apk/", "${outputDir}-${versionMajor}.${versionMinor}.${versionPatch}-${outputFileName}")
                  }*/

            }
        }

    } else {
        throw new GradleException("Could not read version.properties!")
    }

    buildTypes {
        release {
            // Enables code shrinking, obfuscation, and optimization for only
            // your project's release build type.
            minifyEnabled true

            // Enables resource shrinking, which is performed by the
            // Android Gradle plugin.
            shrinkResources true

            // Includes the default ProGuard rules files that are packaged with
            // the Android Gradle plugin. To learn more, go to the section about
            // R8 configuration files.
            proguardFiles getDefaultProguardFile(
                    'proguard-android-optimize.txt'),
                    'proguard-rules.pro',
                    'proguard-rules-new.pro'
        }

        debug {
            resValue("string", "DB_PASSWORD_tpvics_r2.db", "VaLu@b1ePeRcE!V3")
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    testImplementation 'junit:junit:4.13.2'
    implementation "androidx.core:core-ktx:1.7.0"


    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.firebase:firebase-crashlytics-buildtools:2.8.1'
/*    implementation 'androidx.databinding:compilerCommon:3.2.0-alpha11'
    implementation 'androidx.databinding:databinding-compiler-common:7.0.3'*/
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // Datepicker
    implementation 'com.github.BlackBoxVision:datetimepicker-edittext:v0.4.0'

    def work_version = '2.6.0'

    // WorkManager(Java only)
    implementation("androidx.work:work-runtime:$work_version") {
        force = true
    }

    // Permissions Handeling
    implementation 'com.karumi:dexter:6.2.3'

    // EditText Picker (Ali)
    implementation 'com.github.AliAzaz:Edittext-Library:2.0.0'

    implementation 'com.github.AliAzaz:AndroidValidatorCrawler:1.0.3'

    //Image Compressor
    implementation 'id.zelory:compressor:2.1.1'

    // Sqlcipher
    implementation "net.zetetic:android-database-sqlcipher:4.5.0"
    implementation "androidx.sqlite:sqlite:2.0.1"

    //Rooted
    implementation 'com.scottyab:rootbeer-lib:0.1.0'

    // Android Database Browser
    debugImplementation 'com.amitshekhar.android:debug-db-encrypt:1.0.6'



}
